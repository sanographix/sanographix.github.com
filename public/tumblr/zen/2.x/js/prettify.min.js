// Copyright (C) 2006 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview
 * some functions for browser-side pretty printing of code contained in html.
 *
 * <p>
 * For a fairly comprehensive set of languages see the
 * <a href="http://google-code-prettify.googlecode.com/svn/trunk/README.html#langs">README</a>
 * file that came with this source.  At a minimum, the lexer should work on a
 * number of languages including C and friends, Java, Python, Bash, SQL, HTML,
 * XML, CSS, Javascript, and Makefiles.  It works passably on Ruby, PHP and Awk
 * and a subset of Perl, but, because of commenting conventions, doesn't work on
 * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class.
 * <p>
 * Usage: <ol>
 * <li> include this source file in an html page via
 *   {@code <script type="text/javascript" src="/path/to/prettify.js"></script>}
 * <li> define style rules.  See the example page for examples.
 * <li> mark the {@code <pre>} and {@code <code>} tags in your source with
 *    {@code class=prettyprint.}
 *    You can also use the (html deprecated) {@code <xmp>} tag, but the pretty
 *    printer needs to do more substantial DOM manipulations to support that, so
 *    some css styles may not be preserved.
 * </ol>
 * That's it.  I wanted to keep the API as simple as possible, so there's no
 * need to specify which language the code is in, but if you wish, you can add
 * another class to the {@code <pre>} or {@code <code>} element to specify the
 * language, as in {@code <pre class="prettyprint lang-java">}.  Any class that
 * starts with "lang-" followed by a file extension, specifies the file type.
 * See the "lang-*.js" files in this directory for code that implements
 * per-language file handlers.
 * <p>
 * Change log:<br>
 * cbeust, 2006/08/22
 * <blockquote>
 *   Java annotations (start with "@") are now captured as literals ("lit")
 * </blockquote>
 * @requires console
 */// JSLint declarations
/*global console, document, navigator, setTimeout, window, define *//** @define {boolean} */var IN_GLOBAL_SCOPE=!0;window.PR_SHOULD_USE_CONTINUATION=!0;var prettyPrintOne,prettyPrint;(function(){function A(e,t,n,r){if(!t)return;var i={sourceCode:t,basePos:e};n(i);r.push.apply(r,i.decorations)}function M(e){var t=undefined;for(var n=e.firstChild;n;n=n.nextSibling){var r=n.nodeType;t=r===1?t?e:n:r===3?O.test(n.nodeValue)?e:t:t}return t===e?undefined:t}function _(e,t){var n={},r;(function(){var i=e.concat(t),s=[],o={};for(var u=0,a=i.length;u<a;++u){var f=i[u],l=f[3];if(l)for(var c=l.length;--c>=0;)n[l.charAt(c)]=f;var h=f[1],p=""+h;if(!o.hasOwnProperty(p)){s.push(h);o[p]=null}}s.push(/[\0-\uffff]/);r=combinePrefixPatterns(s)})();var i=t.length,s=function(e){var o=e.sourceCode,u=e.basePos,a=[u,S],f=0,l=o.match(r)||[],c={};for(var h=0,p=l.length;h<p;++h){var d=l[h],v=c[d],m=void 0,g;if(typeof v=="string")g=!1;else{var y=n[d.charAt(0)];if(y){m=d.match(y[1]);v=y[0]}else{for(var b=0;b<i;++b){y=t[b];m=d.match(y[1]);if(m){v=y[0];break}}m||(v=S)}g=v.length>=5&&"lang-"===v.substring(0,5);if(g&&(!m||typeof m[1]!="string")){g=!1;v=N}g||(c[d]=v)}var w=f;f+=d.length;if(!g)a.push(u+w,v);else{var E=m[1],x=d.indexOf(E),T=x+E.length;if(m[2]){T=d.length-m[2].length;x=T-E.length}var C=v.substring(5);A(u+w,d.substring(0,x),s,a);A(u+w+x,E,j(C,E),a);A(u+w+T,d.substring(T),s,a)}}e.decorations=a};return s}function D(e){var t=[],n=[];e.tripleQuotedStrings?t.push([m,/^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,null,"'\""]):e.multiLineStrings?t.push([m,/^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,null,"'\"`"]):t.push([m,/^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,null,"\"'"]);e.verbatimStrings&&n.push([m,/^@\"(?:[^\"]|\"\")*(?:\"|$)/,null]);var r=e.hashComments;if(r)if(e.cStyleComments){r>1?t.push([y,/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,"#"]):t.push([y,/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\r\n]*)/,null,"#"]);n.push([m,/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,null])}else t.push([y,/^#[^\r\n]*/,null,"#"]);if(e.cStyleComments){n.push([y,/^\/\/[^\r\n]*/,null]);n.push([y,/^\/\*[\s\S]*?(?:\*\/|$)/,null])}if(e.regexLiterals){var i="/(?=[^/*])(?:[^/\\x5B\\x5C]|\\x5C[\\s\\S]|\\x5B(?:[^\\x5C\\x5D]|\\x5C[\\s\\S])*(?:\\x5D|$))+/";n.push(["lang-regex",new RegExp("^"+REGEXP_PRECEDER_PATTERN+"("+i+")")])}var s=e.types;s&&n.push([b,s]);var o=(""+e.keywords).replace(/^ | $/g,"");o.length&&n.push([g,new RegExp("^(?:"+o.replace(/[\s,]+/g,"|")+")\\b"),null]);t.push([S,/^\s+/,null," \r\n	Â "]);var u=/^.[^\s\w\.$@\'\"\`\/\\]*/;n.push([w,/^@[a-z_$][a-z_$@0-9]*/i,null],[b,/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/,null],[S,/^[a-z_$][a-z_$@0-9]*/i,null],[w,new RegExp("^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*","i"),null,"0123456789"],[S,/^\\[\s\S]?/,null],[E,u,null]);return _(t,n)}function B(t,n){for(var r=n.length;--r>=0;){var i=n[r];H.hasOwnProperty(i)?e.console&&console.warn("cannot override language handler %s",i):H[i]=t}}function j(e,t){if(!e||!H.hasOwnProperty(e))e=/^\s*</.test(t)?"default-markup":"default-code";return H[e]}function F(t){var n=t.langExtension;try{var r=extractSourceSpans(t.sourceNode,t.pre),i=r.sourceCode;t.sourceCode=i;t.spans=r.spans;t.basePos=0;j(n,i)(t);recombineTagsAndDecorations(t)}catch(s){e.console&&console.log(s&&s.stack||s)}}function I(e,t,n){var r=document.createElement("div");r.innerHTML="<pre>"+e+"</pre>";r=r.firstChild;n&&numberLines(r,n,!0);var i={langExtension:t,numberLines:n,sourceNode:r,pre:1};F(i);return r.innerHTML}function q(t,n){function s(e){return r.getElementsByTagName(e)}function E(){var n=e.PR_SHOULD_USE_CONTINUATION?c.now()+250:Infinity;for(;h<u.length&&c.now()<n;h++){var r=u[h],s=w;for(var o=r;o=o.previousSibling;){var a=o.nodeType,f=(a===7||a===8)&&o.nodeValue;if(f?!/^\??prettify\b/.test(f):a!==3||/\S/.test(o.nodeValue))break;if(f){s={};f.replace(/\b(\w+)=([\w:.%+-]+)/g,function(e,t,n){s[t]=n});break}}var l=r.className;if((s!==w||v.test(l))&&!m.test(l)){var S=!1;for(var x=r.parentNode;x;x=x.parentNode){var T=x.tagName;if(b.test(T)&&x.className&&v.test(x.className)){S=!0;break}}if(!S){r.className+=" prettyprinted";var N=s.lang;if(!N){N=l.match(d);var C;!N&&(C=M(r))&&y.test(C.tagName)&&(N=C.className.match(d));N&&(N=N[1])}var k;if(g.test(r.tagName))k=1;else{var L=r.currentStyle,A=i.defaultView,O=L?L.whiteSpace:A&&A.getComputedStyle?A.getComputedStyle(r,null).getPropertyValue("white-space"):0;k=O&&"pre"===O.substring(0,3)}var _=s.linenums;if(!(_=_==="true"||+_)){_=l.match(/\blinenums\b(?::(\d+))?/);_=_?_[1]&&_[1].length?+_[1]:!0:!1}_&&numberLines(r,_,k);p={langExtension:N,sourceNode:r,numberLines:_,pre:k};F(p)}}}h<u.length?setTimeout(E,250):"function"==typeof t&&t()}var r=n||document.body,i=r.ownerDocument||document,o=[s("pre"),s("code"),s("xmp")],u=[];for(var a=0;a<o.length;++a)for(var f=0,l=o[a].length;f<l;++f)u.push(o[a][f]);o=null;var c=Date;c.now||(c={now:function(){return+(new Date)}});var h=0,p,d=/\blang(?:uage)?-([\w.]+)(?!\S)/,v=/\bprettyprint\b/,m=/\bprettyprinted\b/,g=/pre|xmp/i,y=/^code$/i,b=/^(?:pre|code|xmp)$/i,w={};E()}var e=window,t=["break,continue,do,else,for,if,return,while"],n=[t,"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],r=[n,"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],i=[r,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],s=[r,"abstract,assert,boolean,byte,extends,final,finally,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient"],o=[s,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,internal,into,is,let,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where"],u="all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes",a=[r,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],f="caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",l=[t,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],c=[t,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],h=[t,"as,assert,const,copy,drop,enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv,pub,pure,ref,self,static,struct,true,trait,type,unsafe,use"],p=[t,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],d=[i,o,a,f,l,c,p],v=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/,m="str",g="kwd",y="com",b="typ",w="lit",E="pun",S="pln",x="tag",T="dec",N="src",C="atn",k="atv",L="nocode";include("regexpPrecederPatterns.pl");include("combinePrefixPatterns.js");include("extractSourceSpans.js");var O=/\S/,P=D({keywords:d,hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0});include("numberLines.js");include("recombineTagsAndDecorations.js");var H={};B(P,["default-code"]);B(_([],[[S,/^[^<?]+/],[T,/^<!\w[^>]*(?:>|$)/],[y,/^<\!--[\s\S]*?(?:-\->|$)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],[E,/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]);B(_([[S,/^[\s]+/,null," 	\r\n"],[k,/^(?:\"[^\"]*\"?|\'[^\']*\'?)/,null,"\"'"]],[[x,/^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],[C,/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],[E,/^[=<>\/]+/],["lang-js",/^on\w+\s*=\s*\"([^\"]+)\"/i],["lang-js",/^on\w+\s*=\s*\'([^\']+)\'/i],["lang-js",/^on\w+\s*=\s*([^\"\'>\s]+)/i],["lang-css",/^style\s*=\s*\"([^\"]+)\"/i],["lang-css",/^style\s*=\s*\'([^\']+)\'/i],["lang-css",/^style\s*=\s*([^\"\'>\s]+)/i]]),["in.tag"]);B(_([],[[k,/^[\s\S]+/]]),["uq.val"]);B(D({keywords:i,hashComments:!0,cStyleComments:!0,types:v}),["c","cc","cpp","cxx","cyc","m"]);B(D({keywords:"null,true,false"}),["json"]);B(D({keywords:o,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:v}),["cs"]);B(D({keywords:s,cStyleComments:!0}),["java"]);B(D({keywords:p,hashComments:!0,multiLineStrings:!0}),["bash","bsh","csh","sh"]);B(D({keywords:l,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),["cv","py","python"]);B(D({keywords:f,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["perl","pl","pm"]);B(D({keywords:c,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["rb","ruby"]);B(D({keywords:a,cStyleComments:!0,regexLiterals:!0}),["javascript","js"]);B(D({keywords:u,hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]);B(D({keywords:h,cStyleComments:!0,multilineStrings:!0}),["rc","rs","rust"]);B(_([],[[m,/^[\s\S]+/]]),["regex"]);var R=e.PR={createSimpleLexer:_,registerLangHandler:B,sourceDecorator:D,PR_ATTRIB_NAME:C,PR_ATTRIB_VALUE:k,PR_COMMENT:y,PR_DECLARATION:T,PR_KEYWORD:g,PR_LITERAL:w,PR_NOCODE:L,PR_PLAIN:S,PR_PUNCTUATION:E,PR_SOURCE:N,PR_STRING:m,PR_TAG:x,PR_TYPE:b,prettyPrintOne:IN_GLOBAL_SCOPE?e.prettyPrintOne=I:prettyPrintOne=I,prettyPrint:prettyPrint=IN_GLOBAL_SCOPE?e.prettyPrint=q:prettyPrint=q};typeof define=="function"&&define.amd&&define("google-code-prettify",[],function(){return R})})();